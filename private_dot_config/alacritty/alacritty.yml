window:
  dimensions:
    columns: 140
    lines: 32
  padding:
    x: 0
    y: 0
  dynamic_padding: false
  decorations: Full
  start_maximized: true
  dynamic_title: true
scrolling:
  history: 10000
  multiplier: 3

font:
  normal:
    family: VictorMono NF
  bold:
    family: VictorMono NF
    style: Bold
  italic:
    family: VictorMono NF
    style: Italic
  size: 18.0

persistent_logging: false

draw_bold_text_with_bright_colors: true

# Colors (Nord)
colors:
  # COLORSCHEME: ayu_dark.yaml
  # Default colors
  primary:
    # hard contrast: background = '0x1d2021'
    background: '0x0A0E14'
    foreground: '0xB3B1AD'

  # Normal colors
  cursor:
    text: '0x1d1f21'
    cursor: '0xffffff'

  # Normal colors
  vi_mode_cursor:
    text: '0x2e3440'
    cursor: '0xd8dee9'
  selection:
    #text: CellForeground
    background: '0x4c566a'
  search:
    matches:
      #foreground: CellBackground
      background: '0x88c0d0'
    bar:
      background: '0x434c5e'
      foreground: '0xd8dee9'
  normal:
    black: '0x01060E'
    red: '0xEA6C73'
    green: '0x91B362'
    yellow: '0xF9AF4F'
    blue: '0x53BDFA'
    magenta: '0xFAE994'
    cyan: '0x90E1C6'
    white: '0xC7C7C7'

  # Bright colors
  bright:
    black: '0x686868'
    red: '0xF07178'
    green: '0xC2D94C'
    yellow: '0xFFB454'
    blue: '0x59C2FF'
    magenta: '0xFFEE99'
    cyan: '0x95E6CB'
    white: '0xFFFFFF'
  dim:
    black: '0x31363b'
    red: '0x783228'
    green: '0x17a262'
    yellow: '0xb65619'
    blue: '0x1b668f'
    magenta: '0x614a73'
    cyan: '0x186c60'
    white: '0x63686d'

mouse_bindings:
  - {mouse: Middle, action: PasteSelection}

mouse:
  double_click: {threshold: 300}
  triple_click: {threshold: 300}
  hide_when_typing: true

selection:
  semantic_escape_chars: ",â”‚`|:\"' ()[]{}<>"
  save_to_clipboard: false

cursor:
  style: Underline
  unfocused_hollow: true

live_config_reload: true

shell:
  program: /usr/bin/zsh
  args:
    - -i

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify
# a key and modifiers required to trigger it, terminal modes where the binding
# is applicable, and what should be done when the key binding fires. It can
# either send a byte sequnce to the running application (`chars`), execute
# a predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Example:
#   `- { key: V, mods: Command, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  - {key: V, mods: Control, action: Paste}
  - {key: C, mods: Control, action: Copy}
  - {key: U, mods: Alt, action: ScrollPageDown}
  - {key: D, mods: Alt, action: ScrollPageUp}
  - {key: Equals, mods: Control, action: IncreaseFontSize}
  - {key: Home, chars: "\eOH", mode: AppCursor}
  - {key: Home, chars: "\e[H", mode: ~AppCursor}
  - {key: End, chars: "\eOF", mode: AppCursor}
  - {key: End, chars: "\e[F", mode: ~AppCursor}
  - {key: PageUp, mods: Shift, chars: "\e[5;2~"}
  - {key: PageUp, mods: Control, chars: "\e[5;5~"}
  - {key: PageUp, chars: "\e[5~"}
  - {key: PageDown, mods: Shift, chars: "\e[6;2~"}
  - {key: PageDown, mods: Control, chars: "\e[6;5~"}
  - {key: PageDown, chars: "\e[6~"}
  - {key: Tab, mods: Shift, chars: "\e[Z"}
  - {key: Back, chars: "\x7F"}
  - {key: Back, mods: Alt, chars: "\e\x7F"}
  - {key: Insert, chars: "\e[2~"}
  - {key: Delete, chars: "\e[3~"}
  - {key: Left, mods: Shift, chars: "\e[1;2D"}
  - {key: Left, mods: Control, chars: "\e[1;5D"}
  - {key: Left, mods: Alt, chars: "\e[1;3D"}
  - {key: Left, chars: "\e[D", mode: ~AppCursor}
  - {key: Left, chars: "\eOD", mode: AppCursor}
  - {key: Right, mods: Shift, chars: "\e[1;2C"}
  - {key: Right, mods: Control, chars: "\e[1;5C"}
  - {key: Right, mods: Alt, chars: "\e[1;3C"}
  - {key: Right, chars: "\e[C", mode: ~AppCursor}
  - {key: Right, chars: "\eOC", mode: AppCursor}
  - {key: Up, mods: Shift, chars: "\e[1;2A"}
  - {key: Up, mods: Control, chars: "\e[1;5A"}
  - {key: Up, mods: Alt, chars: "\e[1;3A"}
  - {key: Up, chars: "\e[A", mode: ~AppCursor}
  - {key: Up, chars: "\eOA", mode: AppCursor}
  - {key: Down, mods: Shift, chars: "\e[1;2B"}
  - {key: Down, mods: Control, chars: "\e[1;5B"}
  - {key: Down, mods: Alt, chars: "\e[1;3B"}
  - {key: Down, chars: "\e[B", mode: ~AppCursor}
  - {key: Down, chars: "\eOB", mode: AppCursor}
  - {key: F1, chars: "\eOP"}
  - {key: F2, chars: "\eOQ"}
  - {key: F3, chars: "\eOR"}
  - {key: F4, chars: "\eOS"}
  - {key: F5, chars: "\e[15~"}
  - {key: F6, chars: "\e[17~"}
  - {key: F7, chars: "\e[18~"}
  - {key: F8, chars: "\e[19~"}
  - {key: F9, chars: "\e[20~"}
  - {key: F10, chars: "\e[21~"}
  - {key: F11, chars: "\e[23~"}
  - {key: F12, chars: "\e[24~"}
  - {key: F1, mods: Shift, chars: "\e[1;2P"}
  - {key: F2, mods: Shift, chars: "\e[1;2Q"}
  - {key: F3, mods: Shift, chars: "\e[1;2R"}
  - {key: F4, mods: Shift, chars: "\e[1;2S"}
  - {key: F5, mods: Shift, chars: "\e[15;2~"}
  - {key: F6, mods: Shift, chars: "\e[17;2~"}
  - {key: F7, mods: Shift, chars: "\e[18;2~"}
  - {key: F8, mods: Shift, chars: "\e[19;2~"}
  - {key: F9, mods: Shift, chars: "\e[20;2~"}
  - {key: F10, mods: Shift, chars: "\e[21;2~"}
  - {key: F11, mods: Shift, chars: "\e[23;2~"}
  - {key: F12, mods: Shift, chars: "\e[24;2~"}
  - {key: F1, mods: Control, chars: "\e[1;5P"}
  - {key: F2, mods: Control, chars: "\e[1;5Q"}
  - {key: F3, mods: Control, chars: "\e[1;5R"}
  - {key: F4, mods: Control, chars: "\e[1;5S"}
  - {key: F5, mods: Control, chars: "\e[15;5~"}
  - {key: F6, mods: Control, chars: "\e[17;5~"}
  - {key: F7, mods: Control, chars: "\e[18;5~"}
  - {key: F8, mods: Control, chars: "\e[19;5~"}
  - {key: F9, mods: Control, chars: "\e[20;5~"}
  - {key: F10, mods: Control, chars: "\e[21;5~"}
  - {key: F11, mods: Control, chars: "\e[23;5~"}
  - {key: F12, mods: Control, chars: "\e[24;5~"}
  - {key: F1, mods: Alt, chars: "\e[1;6P"}
  - {key: F2, mods: Alt, chars: "\e[1;6Q"}
  - {key: F3, mods: Alt, chars: "\e[1;6R"}
  - {key: F4, mods: Alt, chars: "\e[1;6S"}
  - {key: F5, mods: Alt, chars: "\e[15;6~"}
  - {key: F6, mods: Alt, chars: "\e[17;6~"}
  - {key: F7, mods: Alt, chars: "\e[18;6~"}
  - {key: F8, mods: Alt, chars: "\e[19;6~"}
  - {key: F9, mods: Alt, chars: "\e[20;6~"}
  - {key: F10, mods: Alt, chars: "\e[21;6~"}
  - {key: F11, mods: Alt, chars: "\e[23;6~"}
  - {key: F12, mods: Alt, chars: "\e[24;6~"}
  - {key: F1, mods: Super, chars: "\e[1;3P"}
  - {key: F2, mods: Super, chars: "\e[1;3Q"}
  - {key: F3, mods: Super, chars: "\e[1;3R"}
  - {key: F4, mods: Super, chars: "\e[1;3S"}
  - {key: F5, mods: Super, chars: "\e[15;3~"}
  - {key: F6, mods: Super, chars: "\e[17;3~"}
  - {key: F7, mods: Super, chars: "\e[18;3~"}
  - {key: F8, mods: Super, chars: "\e[19;3~"}
  - {key: F9, mods: Super, chars: "\e[20;3~"}
  - {key: F10, mods: Super, chars: "\e[21;3~"}
  - {key: F11, mods: Super, chars: "\e[23;3~"}
  - {key: F12, mods: Super, chars: "\e[24;3~"}
